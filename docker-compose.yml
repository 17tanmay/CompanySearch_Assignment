services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: jobsearch_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - jobsearch_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  api:
    build: ./backend
    container_name: jobsearch_api
    ports:
      - "8000:8000"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - jobsearch_network
    volumes:
      - ./backend:/app
      - ./data:/app/data
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request; urllib.request.urlopen('http://localhost:8000/health')\" || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    build: ./frontend
    container_name: jobsearch_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      api:
        condition: service_healthy
    networks:
      - jobsearch_network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  data-pipeline:
    build: ./data-pipeline
    container_name: jobsearch_pipeline
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - jobsearch_network
    volumes:
      - ./data:/app/data
      - ./data-pipeline:/app

volumes:
  elasticsearch_data:

networks:
  jobsearch_network:
    driver: bridge

